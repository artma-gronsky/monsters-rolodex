{"version":3,"sources":["components/card-list/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","prop","className","alt","src","monster","id","name","email","CardList","this","props","monsters","map","React","Component","SearchBox","handleChange","placeholder","onChange","event","target","value","type","App","state","searchFilter","fetch","then","response","json","users","setState","str","filteredMonsters","filter","x","toLowerCase","includes","setSearchFilter","bind","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,uCAAkCH,EAAKI,QAAQC,GAA/C,4BACtB,6BAAKL,EAAKI,QAAQE,OAClB,4BAAIN,EAAKI,QAAQG,YCDnBC,G,kKACF,WACI,OAAQ,qBAAKP,UAAU,YAAf,SACHQ,KAAKC,MAAMC,SAASC,KAAI,SAAAR,GACrB,OAAQ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,a,GAJpBQ,IAAMC,YAWdN,ICdFO,G,MAAY,SAAC,GAAD,IAAEC,EAAF,EAAEA,aAAcC,EAAhB,EAAgBA,YAAhB,OACrB,uBAAOhB,UAAU,SAASiB,SAAY,SAAAC,GAAK,OAAIH,EAAaG,EAAMC,OAAOC,QAASC,KAAK,SAASL,YAAaA,MCyDlGM,E,kDAxDX,aAAe,IAAD,8BACV,gBAEKC,MAAQ,CACTC,aAAa,GACbd,SAAU,CACN,CACIN,GAAI,MACJC,KAAM,gBAEV,CACID,GAAI,MACJC,KAAM,WAEV,CACID,GAAI,MACJC,KAAM,aAhBR,E,qDAsBd,WAAqB,IAAD,OAChBoB,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAG,EAAKC,SAAS,CAACpB,SAAUmB,S,wBAG/C,WACIrB,KAAKsB,SAAL,eACOtB,KAAKe,U,6BAIhB,SAAgBQ,GACZvB,KAAKsB,SAAL,2BACOtB,KAAKe,OADZ,IAEIC,aAAcO,O,oBAKtB,WACI,MAAiCvB,KAAKe,MAA/Bb,EAAP,EAAOA,SAAUc,EAAjB,EAAiBA,aACXQ,EAAmBtB,EAASuB,QAAO,SAAAC,GAAC,OAAIA,EAAE7B,KAAK8B,cAAcC,SAASZ,EAAaW,kBAEzF,OACI,sBAAKnC,UAAU,MAAf,UACI,kDACA,cAAC,EAAD,CAAWgB,YAAY,kBAAkBD,aAAcP,KAAK6B,gBAAgBC,KAAK9B,QACjF,cAAC,EAAD,CAAUE,SAAUsB,W,GAnDlBnB,aCOH0B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.caccd194.chunk.js","sourcesContent":["import React from 'react';\n\nimport './card.styles.css';\n\nexport const Card = (prop)=> (\n    <div className=\"card-container\">\n        <img alt=\"monster\" src={`https://robohash.org/mosters/${prop.monster.id}?set=set2&size=180x180`}/>\n        <h2>{prop.monster.name}</h2>\n        <p>{prop.monster.email}</p>\n    </div>\n)\n","import React from 'react';\n\nimport {Card} from \"./card/card.component\";\n\nimport './card-list.styles.css';\n\n\nclass CardList extends React.Component{\n    render() {\n        return (<div className=\"card-list\">\n            {this.props.monsters.map(monster => {\n                return (<Card key={monster.id} monster={monster}/>)\n            })}\n\n        </div>);\n    }\n}\n\nexport default CardList;","import React from 'react';\n\nimport './search-box.styles.css';\n\nexport const SearchBox = ({handleChange, placeholder})=>(\n    <input className=\"search\" onChange={  event => handleChange(event.target.value )} type=\"search\" placeholder={placeholder}/>\n)","import React, {Component} from \"react\";\nimport './App.css';\nimport CardList from \"./components/card-list/card-list.component\";\nimport {SearchBox} from \"./components/search-box/search-box.component\";\n\nclass App extends Component {\n    constructor() {\n        super();\n\n        this.state = {\n            searchFilter:'',\n            monsters: [\n                {\n                    id: \"id1\",\n                    name: \"Frankenstain\"\n                },\n                {\n                    id: \"id2\",\n                    name: \"Dracula\"\n                },\n                {\n                    id: \"id3\",\n                    name: \"Zombie \"\n                }\n            ]\n        }\n    }\n\n    componentDidMount() {\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\n            .then(response => response.json())\n            .then(users=> this.setState({monsters: users}))\n    }\n\n    changeName() {\n        this.setState({\n            ...this.state,\n        });\n    }\n\n    setSearchFilter(str){\n        this.setState({\n            ...this.state,\n            searchFilter: str\n        })\n    }\n\n\n    render() {\n        const {monsters, searchFilter} = this.state;\n        const filteredMonsters = monsters.filter(x => x.name.toLowerCase().includes(searchFilter.toLowerCase()));\n\n        return (\n            <div className=\"App\">\n                <h1>Monsters Rolodex</h1>\n                <SearchBox placeholder=\"Search monsters\" handleChange={this.setSearchFilter.bind(this)}/>\n                <CardList monsters={filteredMonsters}></CardList>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}